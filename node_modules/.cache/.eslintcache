[{"/Users/keehoonjung/projects/react/motion/src/index.tsx":"1","/Users/keehoonjung/projects/react/motion/src/App.tsx":"2","/Users/keehoonjung/projects/react/motion/src/app.tsx":"3","/Users/keehoonjung/projects/react/motion/src/component/header/header.tsx":"4","/Users/keehoonjung/projects/react/motion/src/component/button/button.tsx":"5","/Users/keehoonjung/projects/react/motion/src/component/item/item.tsx":"6","/Users/keehoonjung/projects/react/motion/src/component/image_item/image_item.tsx":"7","/Users/keehoonjung/projects/react/motion/src/component/video_item/video_item.tsx":"8","/Users/keehoonjung/projects/react/motion/src/component/todo_item/todo_itme.tsx":"9","/Users/keehoonjung/projects/react/motion/src/component/note_item/note_item.tsx":"10","/Users/keehoonjung/projects/react/motion/src/component/dialog/dialog.tsx":"11","/Users/keehoonjung/projects/react/motion/src/component/main/main.tsx":"12","/Users/keehoonjung/projects/react/motion/src/component/login/login.tsx":"13","/Users/keehoonjung/projects/react/motion/src/service/firebase.ts":"14","/Users/keehoonjung/projects/react/motion/src/service/auth_service.ts":"15","/Users/keehoonjung/projects/react/motion/src/service/database.ts":"16"},{"size":735,"mtime":1631859230856,"results":"17","hashOfConfig":"18"},{"size":556,"mtime":1631590151674,"results":"19","hashOfConfig":"18"},{"size":955,"mtime":1631779025996,"results":"20","hashOfConfig":"18"},{"size":1041,"mtime":1631782906693,"results":"21","hashOfConfig":"18"},{"size":407,"mtime":1631633412739,"results":"22","hashOfConfig":"18"},{"size":2169,"mtime":1631948873846,"results":"23","hashOfConfig":"18"},{"size":1782,"mtime":1631948703136,"results":"24","hashOfConfig":"18"},{"size":1864,"mtime":1631948611219,"results":"25","hashOfConfig":"18"},{"size":1877,"mtime":1631948815470,"results":"26","hashOfConfig":"18"},{"size":1722,"mtime":1631948788074,"results":"27","hashOfConfig":"18"},{"size":1975,"mtime":1631702421183,"results":"28","hashOfConfig":"18"},{"size":3258,"mtime":1631949795818,"results":"29","hashOfConfig":"18"},{"size":1086,"mtime":1631730263189,"results":"30","hashOfConfig":"18"},{"size":331,"mtime":1631776607327,"results":"31","hashOfConfig":"18"},{"size":1451,"mtime":1631782463047,"results":"32","hashOfConfig":"18"},{"size":1331,"mtime":1631949827376,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jg3qg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/keehoonjung/projects/react/motion/src/index.tsx",[],["72","73"],"/Users/keehoonjung/projects/react/motion/src/App.tsx",[],"/Users/keehoonjung/projects/react/motion/src/app.tsx",[],"/Users/keehoonjung/projects/react/motion/src/component/header/header.tsx",[],"/Users/keehoonjung/projects/react/motion/src/component/button/button.tsx",[],"/Users/keehoonjung/projects/react/motion/src/component/item/item.tsx",[],"/Users/keehoonjung/projects/react/motion/src/component/image_item/image_item.tsx",["74","75"],"import React, { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { DragItemType, itemProps, ItemTypes } from \"../item/item\";\nimport styles from \"./image_item.module.css\";\n\nconst ImageItem = ({ card, onDeleteItem, moveItem }: itemProps) => {\n  const onClick = () => {\n    onDeleteItem(card);\n  };\n\n  const ref: React.LegacyRef<HTMLDivElement> = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.ITEM,\n    hover(item: DragItemType, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const dragId = item.id;\n      const hoverId = card.id;\n\n      if (dragId === hoverId) {\n        return;\n      }\n\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect!.bottom - hoverBoundingRect!.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect!.top;\n\n      moveItem(dragId, hoverId);\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.ITEM,\n    item: { id: card.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }));\n\n  drag(drop(ref));\n\n  return (\n    <li className={styles.list}>\n      <div\n        ref={ref}\n        style={{ opacity: isDragging ? 0.5 : 1 }}\n        className={styles.container}\n      >\n        <img className={styles.img} src={card.url} alt=\"\" />\n        <div className={styles.description}>\n          <h2 className={styles.title}>{card.title}</h2>\n          <p className={styles.memo}> {card.text}</p>\n        </div>\n        <button className={styles.deletebutton} onClick={onClick}>\n          <i className=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default ImageItem;\n","/Users/keehoonjung/projects/react/motion/src/component/video_item/video_item.tsx",["76","77"],"import React, { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { DragItemType, itemProps, ItemTypes } from \"../item/item\";\nimport styles from \"./video_item.module.css\";\n\nconst VideoItem = ({ card, onDeleteItem, moveItem }: itemProps) => {\n  const onClick = () => {\n    onDeleteItem(card);\n  };\n\n  const ref: React.LegacyRef<HTMLDivElement> = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.ITEM,\n    hover(item: DragItemType, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const dragId = item.id;\n      const hoverId = card.id;\n\n      if (dragId === hoverId) {\n        return;\n      }\n\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect!.bottom - hoverBoundingRect!.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect!.top;\n\n      moveItem(dragId, hoverId);\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.ITEM,\n    item: { id: card.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }));\n\n  drag(drop(ref));\n  return (\n    <li className={styles.list}>\n      <div\n        ref={ref}\n        style={{ opacity: isDragging ? 0.5 : 1 }}\n        className={styles.container}\n      >\n        <iframe\n          width=\"300\"\n          height=\"200\"\n          src={card.url}\n          title=\"YouTube video player\"\n        ></iframe>\n        <div className={styles.description}>\n          <h2 className={styles.title}>{card.title}</h2>\n          <p className={styles.memo}> {card.text}</p>\n        </div>\n        <button className={styles.deletebutton} onClick={onClick}>\n          <i className=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default VideoItem;\n","/Users/keehoonjung/projects/react/motion/src/component/todo_item/todo_itme.tsx",["78","79"],"import React, { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { DragItemType, itemProps, ItemTypes } from \"../item/item\";\nimport styles from \"./todo_item.module.css\";\n\nconst TodoItem = ({ card, onDeleteItem, moveItem }: itemProps) => {\n  const onClick = () => {\n    onDeleteItem(card);\n  };\n\n  const ref: React.LegacyRef<HTMLDivElement> = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.ITEM,\n    hover(item: DragItemType, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const dragId = item.id;\n      const hoverId = card.id;\n\n      if (dragId === hoverId) {\n        return;\n      }\n\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect!.bottom - hoverBoundingRect!.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect!.top;\n\n      moveItem(dragId, hoverId);\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.ITEM,\n    item: { id: card.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }));\n\n  drag(drop(ref));\n\n  return (\n    <li className={styles.list}>\n      <div\n        ref={ref}\n        style={{ opacity: isDragging ? 0.5 : 1 }}\n        className={styles.container}\n      >\n        <section className={styles.document}>\n          <h2 className={styles.title}>{card.title}</h2>\n          <input\n            className={styles.checkbox}\n            type=\"checkbox\"\n            id=\"ReadBook\"\n            name=\"ReadBook\"\n          />\n          <label htmlFor=\"ReadBook\">{card.text}</label>\n        </section>\n        <button className={styles.deletebutton} onClick={onClick}>\n          <i className=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","/Users/keehoonjung/projects/react/motion/src/component/note_item/note_item.tsx",["80","81"],"import React, { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { DragItemType, itemProps, ItemTypes } from \"../item/item\";\nimport styles from \"./note_item.module.css\";\n\nconst NoteItem = ({ card, onDeleteItem, moveItem }: itemProps) => {\n  const onClick = () => {\n    onDeleteItem(card);\n  };\n\n  const ref: React.LegacyRef<HTMLDivElement> = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.ITEM,\n    hover(item: DragItemType, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const dragId = item.id;\n      const hoverId = card.id;\n\n      if (dragId === hoverId) {\n        return;\n      }\n\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect!.bottom - hoverBoundingRect!.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset!.y - hoverBoundingRect!.top;\n\n      moveItem(dragId, hoverId);\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.ITEM,\n    item: { id: card.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }));\n\n  drag(drop(ref));\n\n  return (\n    <li className={styles.list}>\n      <div\n        ref={ref}\n        style={{ opacity: isDragging ? 0.5 : 1 }}\n        className={styles.container}\n      >\n        <section className={styles.document}>\n          <h2 className={styles.title}>{card.title}</h2>\n          <p className={styles.text}>{card.text}</p>\n        </section>\n        <button className={styles.deletebutton} onClick={onClick}>\n          <i className=\"fas fa-times\"></i>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default NoteItem;\n","/Users/keehoonjung/projects/react/motion/src/component/dialog/dialog.tsx",[],"/Users/keehoonjung/projects/react/motion/src/component/main/main.tsx",["82","83"],"import { User } from \"@firebase/auth\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthInterface } from \"../../service/auth_service\";\nimport { DataInterface } from \"../../service/database\";\nimport Dialog from \"../dialog/dialog\";\nimport Header from \"../header/header\";\nimport Item, { ItemType } from \"../item/item\";\nimport stylse from \"./main.module.css\";\n\nexport type ItemState = {\n  [key: string | number]: ItemType;\n};\n\ntype MainProps = {\n  authService: AuthInterface;\n  dataService: DataInterface;\n};\n\ninterface HistoryStateId {\n  id: string;\n}\n\nconst Main = ({ dataService, authService }: MainProps) => {\n  const history = useHistory<HistoryStateId>();\n  const historyState = history?.location?.state;\n  const [userId, setUserId] = useState(historyState && historyState.id);\n  const [items, setItem] = useState<ItemState>({});\n  const [onDialog, setOnDialog] = useState(false);\n  const [type, setType] = useState(\"\");\n\n  const setOnCilck = (type: string) => {\n    setOnDialog(true);\n    setType(type);\n  };\n  const setExitCiick = () => {\n    setOnDialog(false);\n    setType(\"\");\n  };\n\n  const onLogout = () => {\n    authService.logout();\n  };\n\n  useEffect(() => {\n    if (!userId) {\n      return;\n    }\n    dataService.readData(userId, (items: ItemState) => {\n      setItem(items);\n    });\n  }, [userId, dataService]);\n\n  useEffect(() => {\n    authService.onAuthChange((user: User | null) => {\n      if (user) {\n        setUserId(user.uid);\n      } else {\n        history.push(\"/\");\n      }\n    });\n  }, [authService, userId, history]);\n\n  const onSubmitItem = (item: ItemType) => {\n    setItem((items) => {\n      const updated = { ...items };\n      updated[item.id] = item;\n      return updated;\n    });\n    setOnDialog(false);\n    setType(\"\");\n    dataService.writeData(userId, item);\n  };\n\n  const onDeleteItem = (item: ItemType) => {\n    setItem((items) => {\n      const updated = { ...items };\n      delete updated[item.id];\n      return updated;\n    });\n    dataService.deleteData(userId, item.id);\n  };\n\n  const moveItem = (dragId: number | string, hoberId: number | string) => {\n    const result = { ...items };\n    const keys = Object.keys(result);\n    const dragIndex = keys.indexOf(`${dragId}`);\n    const hoberIndex = keys.indexOf(`${hoberId}`);\n\n    keys.splice(dragIndex, 1);\n    keys.splice(hoberIndex, 0, `${dragId}`);\n\n    const updated: ItemState = {};\n\n    keys.map((key) => {\n      updated[key] = result[key];\n      console.log(updated[key]);\n    });\n\n    setItem(updated);\n    dataService.updateOrder(userId, items);\n  };\n\n  return (\n    <>\n      {onDialog && (\n        <div className={stylse.background}>\n          <Dialog\n            type={type}\n            onSubmitItem={onSubmitItem}\n            setExitCiick={setExitCiick}\n          />\n        </div>\n      )}\n      <div className={stylse.container}>\n        <Header setOnCilck={setOnCilck} onLogout={onLogout} />\n        <section className={stylse.item_container}>\n          <Item items={items} onDeleteItem={onDeleteItem} moveItem={moveItem} />\n        </section>\n        <footer className={stylse.footer}>\n          <p>JK Motion</p>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n","/Users/keehoonjung/projects/react/motion/src/component/login/login.tsx",[],"/Users/keehoonjung/projects/react/motion/src/service/firebase.ts",[],"/Users/keehoonjung/projects/react/motion/src/service/auth_service.ts",[],"/Users/keehoonjung/projects/react/motion/src/service/database.ts",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":28,"column":13,"nodeType":"90","messageId":"91","endLine":28,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":31,"column":13,"nodeType":"90","messageId":"91","endLine":31,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":28,"column":13,"nodeType":"90","messageId":"91","endLine":28,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":31,"column":13,"nodeType":"90","messageId":"91","endLine":31,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":28,"column":13,"nodeType":"90","messageId":"91","endLine":28,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":31,"column":13,"nodeType":"90","messageId":"91","endLine":31,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":28,"column":13,"nodeType":"90","messageId":"91","endLine":28,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":31,"column":13,"nodeType":"90","messageId":"91","endLine":31,"endColumn":25},{"ruleId":"88","severity":1,"message":"93","line":2,"column":17,"nodeType":"90","messageId":"91","endLine":2,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":95,"column":20,"nodeType":"96","messageId":"97","endLine":95,"endColumn":22},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"@typescript-eslint/no-unused-vars","'hoverMiddleY' is assigned a value but never used.","Identifier","unusedVar","'hoverClientY' is assigned a value but never used.","'useCallback' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]